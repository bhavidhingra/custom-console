#!/usr/bin/env bash

# ONLY SUPPORTED ON MAC

#shellcheck disable=SC1091
#shellcheck disable=SC2048
#shellcheck disable=SC2086

source "$__CUSTOM_CONSOLE_UTIL"/__println_as

BRIGHTNESS_INC_CODE="144"
BRIGHTNESS_DEC_CODE="145"

# Usage: brightnesschange 2     (to increase by 2 levels)
#        brightnesschange -2    (to decrease by 2 levels)
function main() {

    [[ $# -eq 0 ]] && { 
        __println_as red "[ERROR] Please input the offset value [-5, 5]."
        return
    }

    [[ $1 == 0 ]] && return

    brightnessArr=("%1e%00" "3%00" "L%00" "m%00" "%96%00" "%c9%00" "%06%01" "S%01" "%ae%01" "%1e%02" "%a4%02")
    brightnessArr+=("F%03" "%0a%04" "%f7%04" "%14%06" "c%07")
    n=${#brightnessArr[@]}

    brightnessLevel="$(nvram backlight-level | awk '{print $2}')"
    si=0
    while [[ "${brightnessArr[$si]}" != "${brightnessLevel}" ]] ; do
        si=$((si + 1))
    done

    ei=$((si + $1))

    if [[ $ei -gt $((n - 1)) ]]; then
        if [[ $si -eq $((n - 1)) ]]; then
            __println_as blue "[INFO] Highest brightness level."
            return
        fi
        ei=$((n - 1))
    elif [[ $ei -lt 0 ]]; then
        if [[ $si -eq 0 ]]; then
            __println_as blue "[INFO] Lowest brightness level."
            return
        fi
        ei=0
    fi

    if [[ ${ei} -lt ${si} ]]; then
        keyCode=${BRIGHTNESS_DEC_CODE}
    else
        keyCode=${BRIGHTNESS_INC_CODE}
    fi

    for i in $(seq ${si} ${ei}); do
        [[ ${i} -eq ${ei} ]] && {
            [[ ${ei} -eq 0 ]] && { __println_as blue "[INFO] Reached lowest brightness level."; }
            [[ ${ei} -eq $((n-1)) ]] && { __println_as blue "[INFO] Reached highest brightness level."; }
            break
        }
        osascript -e 'tell application "System Events"' -e "key code ${keyCode}" -e ' end tell'
        osascript -e 'tell application "System Events"' -e "key code ${keyCode}" -e ' end tell'
    done
}

main $*
